
let board_width = 80;
let board_height = 80;
let cell_size = 10;

def draw_cell(row, col) {
    let x = row * cell_size;
    let y = col * cell_size;
    sdl_draw_rect(x, y, cell_size, cell_size);
}

def random_board() {
    for (let i = 0; i < board_width; i = i + 1) {
        for (let j = 0; j < board_height; j = j + 1) {
            let state = random(1);
            if (state == 1) {
                set_cell(i, j, 1);
            }
        }
    }
    push_board();
}

def line_board() {
    for (let i = 0; i < board_width; i = i + 1) {
        for (let j = 0; j < board_height; j = j + 1) {
            if (i == board_width / 2) {
                set_cell(i, j, 1);
            }
            if (i == board_width / 2 - 1) {
                set_cell(i, j, 1);
            }
        }
    }
    push_board();
}

def neighbour_check(row, col) {
    if (row < 0) {
        return 0;
    } if (row >= board_width) {
        return 0;
    } if (col < 0) {
        return 0;
    } if (col >= board_height) {
        return 0;
    }

    return get_cell(row, col);
}

def get_neighbours(row, col) {
    let neighbours = 0;

    for (let i = -1; i < 2; i = i + 1) {
        for (let j = -1; j < 2; j = j + 1) {
            neighbours = neighbours + neighbour_check(row + i, col + j);
        }
    }

    neighbours = neighbours - get_cell(row, col);

    return neighbours;
}

def run() {
    for (let row = 0; row < board_width; row = row + 1) {
        for (let col = 0; col < board_height; col = col + 1) {
            let cell = get_cell(row, col);
            let neighbours = get_neighbours(row, col);

            if (cell == 1) {
                if (neighbours < 2) {
                    set_cell(row, col, 0);

                } else if (neighbours > 3) {
                    set_cell(row, col, 0);

                } else {
                    set_cell(row, col, 1);

                }
            } else {
                if (neighbours == 3) {
                    set_cell(row, col, 1);

                } else {
                    set_cell(row, col, 0);

                }
            }
        }
    }

    push_board();
}

def draw() {
    for (let row = 0; row < board_width; row = row + 1) {
        for (let col = 0; col < board_height; col = col + 1) {
            let cell = get_cell(row, col);
            if (cell == 1) {
                draw_cell(row, col);
            }
        }
    }
}

sdl_init(board_width * cell_size, board_height * cell_size, "Game of Life");
line_board();

while (sdl_is_not_quit()) {
    sdl_clear();
    draw();
    sdl_update();
    run();
}

sdl_quit();